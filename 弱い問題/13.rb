# 3
# 次のコードを実行するとどうなりますか。

v1 = 1 / 2 == 0
v2 = !!v1 or raise RuntimeError
puts v2 and false


# シンタックスエラーとなる

# 選択肢
# 実行時にエラーとなる

# 選択肢
# true と表示される

# 選択肢
# false と表示される

# 1: v1 = 1 / 2 == 0
# 2: v2 = !!v1 or raise RuntimeError
# 3: puts v2 and false
# 1行目では、Fixnumクラス同士の除算はFixnumクラスになります。
# よって、0 == 0が評価され、v1はtrueになります。

# 2行目では、orは左辺が真であればその結果を返します。この時、右辺は評価されません。
# 左辺が偽であれば、右辺を評価しその結果を返します。
# また、orは評価する優先順位が低い演算子です。
# よって、優先順位が低いのでv2には!!v1の結果のtrueが入ります。
# 次に、!!v1 or raise RuntimeErrorが評価され、左辺が真であるため、左辺のみ評価されます。

# 3行目では、andは左辺が真であれば、右辺の結果を返します。左辺が偽であれば、左辺の結果を返します。
# また、andは評価する優先順位が低い演算子です。
# よって、優先順位が低いのでputs v2が評価されます。

# 演算子の優先順位を適切にするためには、括弧で式を区切ります。
